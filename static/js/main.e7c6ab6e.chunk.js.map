{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputList","setInputList","Items","setItems","deleteItems","item","console","log","filter","arrElem","index","className","type","placeholder","value","onChange","event","target","onClick","map","itemvalue","id","text","onSelect","style","display","justifyContent","alignItems","padding","border","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAAe,I,YCoEAA,MAhEf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAYMC,EAAc,SAACC,GACnBC,QAAQC,IAAI,WACZJ,GAAS,SAACD,GACR,OAAOA,EAAMM,QAAO,SAACC,EAASC,GAC5B,OAAOD,IAAYJ,SAKzB,OACE,qBAAKM,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,uBACEC,KAAK,OACLC,YAAY,gBACZC,MAAOd,EACPe,SA3BU,SAACC,GACjBf,EAAae,EAAMC,OAAOH,UA4BtB,wBAAQI,QAzBM,WAClBf,EAAS,GAAD,mBAAKD,GAAL,CAAYF,KACpBC,EAAa,IACbK,QAAQC,IAAIL,IAsBR,iBAEA,6BAGGA,EAAMiB,KAAI,SAACC,EAAWV,GAAZ,OACT,sBAEEW,GAAIX,EACJY,KAAMF,EACNG,SAAUnB,EACVoB,MAAO,CACLC,QAAS,OACTC,eAAgB,eAChBC,WAAY,SACZC,QAAS,MACTC,OAAQ,mBAVZ,UAaE,6BAAKT,IACL,wBAAQT,UAAU,MAAMO,QAAS,kBAAMd,EAAYgB,IAAnD,mBAbKV,cChCJoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e7c6ab6e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [inputList, setInputList] = useState(\"\");\n  const [Items, setItems] = useState([]);\n\n  const itemEvent = (event) => {\n    setInputList(event.target.value);\n  };\n\n  const listOfItems = () => {\n    setItems([...Items, inputList]);\n    setInputList(\"\");\n    console.log(Items);\n  };\n\n  const deleteItems = (item) => {\n    console.log(\"deleted\");\n    setItems((Items) => {\n      return Items.filter((arrElem, index) => {\n        return arrElem !== item;\n      });\n    });\n  };\n\n  return (\n    <div className=\"main_div\">\n      <div className=\"center_div\">\n        <br />\n        <input\n          type=\"text\"\n          placeholder=\"add a item...\"\n          value={inputList}\n          onChange={itemEvent}\n        />\n        <button onClick={listOfItems}>Add</button>\n\n        <ol>\n          {/* <li>{inputList}</li> */}\n\n          {Items.map((itemvalue, index) => (\n            <div\n              key={index}\n              id={index}\n              text={itemvalue}\n              onSelect={deleteItems}\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                alignItems: \"center\",\n                padding: \"8px\",\n                border: \"1px solid black\",\n              }}\n            >\n              <li>{itemvalue}</li>\n              <button className=\"but\" onClick={() => deleteItems(itemvalue)}>\n                Del\n              </button>\n            </div>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}